% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weighting_functions.R
\name{kw.gbm}
\alias{kw.gbm}
\title{Calculate KW-GBM pseudo-weights}
\usage{
kw.gbm(psa_dat, wt, rsp_name, formula, tune_idepth, tune_ntree, covars,
  h = NULL, krn = "triang", Large = F, rm.s = F)
}
\arguments{
\item{psa_dat}{Dataframe of the combined non-probability and probability sample}

\item{wt}{Name of the weight variable in psa_dat
(common weights of 1 for non-probability sample, and survey weights for probability sample)}

\item{rsp_name}{Name of the non-probability sample membership indicator in psa_dat
(1 for non-probability sample units, and 0 for probability sample units)}

\item{formula}{Formula of the propensity model
(see gbm() in gbm package)}

\item{tune_idepth}{A vector of values for the tuning parameter interaction.depth
(see gbm() in gbm package)}

\item{tune_ntree}{A vector of values for the tuning parameter n.trees
(see gbm() in gbm package)}

\item{covars}{A vector of covariate names for standardized mean differences
(SMD; covariate balance) calculation (see bal.tab() in cobalt package)}

\item{h}{Bandwidth parameter
(will be calculated corresponding to kernel function if not specified)}

\item{krn}{Kernel function.
"triang": triangular density on (-3, 3),
"dnorm": standard normal density,
"dnorm_t": truncated standard normal density on (-3, 3).}

\item{Large}{The cohort size is so large that it has to be divided into pieces. Default is FALSE.}

\item{rm.s}{Remove unmatched survey units or not. Default is FALSE.}
}
\value{
A list \cr
iter: Number of iteration for reaching convergence in SMD \cr
pswt: A dataframe including KW pseudo-weights for each tuning parameter setting \cr
smds: A vector of SMD for each set of KW pseudo-weights \cr
p_score_c: A dataframe including propensity scores for non-probability sample units
for each tuning parameter setting \cr
p_score_s: A dataframe including propensity scores for probability sample units
for each tuning parameter setting
}
\description{
This function computes KW pseudo-weights using gradient tree boosting
(gbm() in gbm package) to predict propensity scores.
}
